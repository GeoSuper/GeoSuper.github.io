[{"content":"二零二一年十二月三十日，星期四，和太太在一起的第一千零七十四天。于北京，晴。\n我知道你今天心里一定不好受，但是这几个月我们着实都在为此准备、期待、努力。虽然结果不如人意，但是我想告诉你，你还有我，我会一直做你最坚强的后盾。\n我们现在租着房子，但是我相信，以后我们会有自己的房子。我们现在存款很少，但是我相信通过我们的努力，我们以后会变得富有。一切都会有的，面对未来还是要充满希望的。\n老婆，不要气馁，希望你过了今天，还能继续开开心心。我们一起继续去体会人生的美好。\n","permalink":"https://geosuper.top/posts/%E9%9A%BE%E6%9C%89%E6%89%80%E5%BE%97/","summary":"二零二一年十二月三十日，星期四，和太太在一起的第一千零七十四天。于北京，晴。\n我知道你今天心里一定不好受，但是这几个月我们着实都在为此准备、期待、努力。虽然结果不如人意，但是我想告诉你，你还有我，我会一直做你最坚强的后盾。\n我们现在租着房子，但是我相信，以后我们会有自己的房子。我们现在存款很少，但是我相信通过我们的努力，我们以后会变得富有。一切都会有的，面对未来还是要充满希望的。\n老婆，不要气馁，希望你过了今天，还能继续开开心心。我们一起继续去体会人生的美好。","title":"20211230"},{"content":"还有一周的时间，工作就达半年了，工作以后发现和自己之前想得挺不一样的，还是太幼稚了。\n你知道会遇到各种各样的人，但是没有想过遇到这些人，需要报以什么样的心态，和什么样的方式来解决可能会发生的矛盾甚至冲突。有没有通用的方式方法呢？\n我还需要去寻找，反正目前还是有些许的苦恼的，尽管我很喜欢现在的工作。\n所以再坚持一下吧，在坚持中至少学会不抱怨，放好心态！\n以提高个人能力为目标，心向阳光，积极进取！\n","permalink":"https://geosuper.top/posts/stop/","summary":"还有一周的时间，工作就达半年了，工作以后发现和自己之前想得挺不一样的，还是太幼稚了。\n你知道会遇到各种各样的人，但是没有想过遇到这些人，需要报以什么样的心态，和什么样的方式来解决可能会发生的矛盾甚至冲突。有没有通用的方式方法呢？\n我还需要去寻找，反正目前还是有些许的苦恼的，尽管我很喜欢现在的工作。\n所以再坚持一下吧，在坚持中至少学会不抱怨，放好心态！\n以提高个人能力为目标，心向阳光，积极进取！","title":"20211214"},{"content":"方法一、ArcGIS Pro 利用ArcGIS Pro的自动配准 查看控制点表可以看到自动打了49个点，还是均匀分布于影像的 局部结果如下图所示，然后另存为新的栅格即可。 总结：首先进行自动配准，如果不好的话，可再次进行自动配准，然后打开控制点表格，删除误差比较大的点，边删边看下自动配准的怎么样，基本都能达到满意的结果。\n方法二、Python(arosics包) arosics作者github arosics使用手册 根据使用手册安装arosics及相关依赖库\n纸上得来终觉浅，实践一下：\nimport arosics from geoarray import GeoArray 加载官方给的样例数据，发现偏移的不是很大，所以自己又手动给目标影像偏移增大了下，命名为*sub1.tif。\nim_reference = \u0026#34;G:/learnpy/arosics/master/ref_S2A_20160608T153121_T33UUU_sub.tif\u0026#34; im_target = \u0026#34;G:/learnpy/arosics/master/tgt_S2A_20160529T153631_T33UUU_sub1.tif\u0026#34; geoArr = GeoArray(im_reference) 查看参考影像的相关参数\nref_ndarray = geoArr[:] ref_gt = geoArr.geotransform ref_prj = geoArr.projection 查看目标影像的相关参数\ntgt_ndarray = geoArr[:] tgt_gt = geoArr.geotransform tgt_prj = geoArr.projection geoArr_reference = GeoArray(ref_ndarray, ref_gt, ref_prj) geoArr_target = GeoArray(tgt_ndarray, tgt_gt, tgt_prj) CR = arosics.CoReg.COREG(geoArr_reference, geoArr_target, wp=(None, None), ws=(256, 256),path_out=\u0026#34;C:/Users/Administrator/Desktop/temp/11.tif\u0026#34;) 计算空间偏移\nCR.calculate_spatial_shifts() CR.correct_shifts() 看一下最后的配准结果： 欢迎关注个人公众号GeoSuper ","permalink":"https://geosuper.top/posts/%E9%81%A5%E6%84%9F%E5%BD%B1%E5%83%8F%E9%A2%84%E5%A4%84%E7%90%86%E4%B9%8B%E8%87%AA%E5%8A%A8%E9%85%8D%E5%87%86/","summary":"方法一、ArcGIS Pro 利用ArcGIS Pro的自动配准 查看控制点表可以看到自动打了49个点，还是均匀分布于影像的 局部结果如下图所示，然后另存为新的栅格即可。 总结：首先进行自动配准，如果不好的话，可再次进行自动配准，然后打开控制点表格，删除误差比较大的点，边删边看下自动配准的怎么样，基本都能达到满意的结果。\n方法二、Python(arosics包) arosics作者github arosics使用手册 根据使用手册安装arosics及相关依赖库\n纸上得来终觉浅，实践一下：\nimport arosics from geoarray import GeoArray 加载官方给的样例数据，发现偏移的不是很大，所以自己又手动给目标影像偏移增大了下，命名为*sub1.tif。\nim_reference = \u0026#34;G:/learnpy/arosics/master/ref_S2A_20160608T153121_T33UUU_sub.tif\u0026#34; im_target = \u0026#34;G:/learnpy/arosics/master/tgt_S2A_20160529T153631_T33UUU_sub1.tif\u0026#34; geoArr = GeoArray(im_reference) 查看参考影像的相关参数\nref_ndarray = geoArr[:] ref_gt = geoArr.geotransform ref_prj = geoArr.projection 查看目标影像的相关参数\ntgt_ndarray = geoArr[:] tgt_gt = geoArr.geotransform tgt_prj = geoArr.projection geoArr_reference = GeoArray(ref_ndarray, ref_gt, ref_prj) geoArr_target = GeoArray(tgt_ndarray, tgt_gt, tgt_prj) CR = arosics.CoReg.COREG(geoArr_reference, geoArr_target, wp=(None, None), ws=(256, 256),path_out=\u0026#34;C:/Users/Administrator/Desktop/temp/11.tif\u0026#34;) 计算空间偏移\nCR.calculate_spatial_shifts() CR.correct_shifts() 看一下最后的配准结果： 欢迎关注个人公众号GeoSuper ","title":"遥感影像预处理之自动配准"},{"content":"数据来源：高德开放平台 1. 目标： （1）获取中国最新的县级行政区划矢量数据 （2）学习如何使用R语言将.json数据转为shp文件 2. 步骤： 将json数据处理为shapefile library(pacman) p_load(sf,tmap,maptools,rgdal) china\u0026lt;-st_read(\u0026#34;https://geo.datav.aliyun.com/areas_v2/bound/100000_full.json\u0026#34;) class(china) # [1] \u0026#34;sp\u0026#34; china qtm() qtm(china, fill = \u0026#34;name\u0026#34;)+ tm_text(\u0026#34;name\u0026#34;) crs(china) # CRS arguments: +proj=longlat +datum=WGS84 +no_defs  china$name # [1] \u0026#34;北京市\u0026#34; \u0026#34;天津市\u0026#34; \u0026#34;河北省\u0026#34; \u0026#34;山西省\u0026#34; \u0026#34;内蒙古自治区\u0026#34;  # [6] \u0026#34;辽宁省\u0026#34; \u0026#34;吉林省\u0026#34; \u0026#34;黑龙江省\u0026#34; \u0026#34;上海市\u0026#34; \u0026#34;江苏省\u0026#34;  # [11] \u0026#34;浙江省\u0026#34; \u0026#34;安徽省\u0026#34; \u0026#34;福建省\u0026#34; \u0026#34;江西省\u0026#34; \u0026#34;山东省\u0026#34;  # [16] \u0026#34;河南省\u0026#34; \u0026#34;湖北省\u0026#34; \u0026#34;湖南省\u0026#34; \u0026#34;广东省\u0026#34; \u0026#34;广西壮族自治区\u0026#34;  # [21] \u0026#34;海南省\u0026#34; \u0026#34;重庆市\u0026#34; \u0026#34;四川省\u0026#34; \u0026#34;贵州省\u0026#34; \u0026#34;云南省\u0026#34;  # [26] \u0026#34;西藏自治区\u0026#34; \u0026#34;陕西省\u0026#34; \u0026#34;甘肃省\u0026#34; \u0026#34;青海省\u0026#34; \u0026#34;宁夏回族自治区\u0026#34;  # [31] \u0026#34;新疆维吾尔自治区\u0026#34; \u0026#34;台湾省\u0026#34; \u0026#34;香港特别行政区\u0026#34; \u0026#34;澳门特别行政区\u0026#34; \u0026#34;\u0026#34; 导出为shapefile\nst_write(china, \u0026#34;G:/Rdata/China/GeoAltas/China.shp\u0026#34;, layer_options = \u0026#34;ENCODING=UTF-8\u0026#34;,delete_layer = TRUE) **province \u0026lt;- paste0(\u0026#34;https://geo.datav.aliyun.com/areas_v2/bound/\u0026#34;,china$adcode,\u0026#34;_full.json\u0026#34;) province1 \u0026lt;- province[1:34] province1 count=0 for (i in province1){ x \u0026lt;- st_read(i) count \u0026lt;- count + 1 st_write(x,dsn = \u0026#34;G:/Rdata/China/GeoAltas/1\u0026#34;,layer = china$name[count], layer_options = \u0026#34;ENCODING=UTF-8\u0026#34;,delete_layer = TRUE, driver = \u0026#34;ESRI Shapefile\u0026#34;) } county \u0026lt;- list.files(\u0026#34;G:/Rdata/China/GeoAltas/1/省市\u0026#34;, full.names = TRUE, pattern = \u0026#34;.shp$\u0026#34;) library(plyr) data \u0026lt;- NULL for(aFile in county){ data \u0026lt;- rbind.fill(data, st_read(aFile)) } data \u0026lt;- st_as_sf(data) class(data) # [1] \u0026#34;sf\u0026#34; \u0026#34;data.frame\u0026#34; qtm(data,fill = \u0026#34;name\u0026#34;) data #https://stackoverflow.com/questions/64569432/st-union-sf-polygons-with-data-table data=data[1:nrow(data),] st_write(data,\u0026#34;G:/Rdata/China/GeoAltas/city.shp\u0026#34;, layer_options = \u0026#34;ENCODING=UTF-8\u0026#34;,delete_layer = TRUE) library(\u0026#34;dplyr\u0026#34;) data \u0026lt;- data%\u0026gt;% dplyr::filter(chldrnN \u0026gt;0 ) qtm(data) city_county \u0026lt;- paste0(\u0026#34;https://geo.datav.aliyun.com/areas_v2/bound/\u0026#34;,data$adcode,\u0026#34;_full.json\u0026#34;) head(city_county) # [1] \u0026#34;https://geo.datav.aliyun.com/areas_v2/bound/340100_full.json\u0026#34; # [2] \u0026#34;https://geo.datav.aliyun.com/areas_v2/bound/340200_full.json\u0026#34; # [3] \u0026#34;https://geo.datav.aliyun.com/areas_v2/bound/340300_full.json\u0026#34; # [4] \u0026#34;https://geo.datav.aliyun.com/areas_v2/bound/340400_full.json\u0026#34; # [5] \u0026#34;https://geo.datav.aliyun.com/areas_v2/bound/340500_full.json\u0026#34; # [6] \u0026#34;https://geo.datav.aliyun.com/areas_v2/bound/340600_full.json\u0026#34; count1 = 0 for(i in city_county){ x \u0026lt;- st_read(i) count1 \u0026lt;- count1 + 1 st_write(x,dsn = \u0026#34;G:/Rdata/China/GeoAltas/1/市县\u0026#34;,layer = data$name[count1], layer_options = \u0026#34;ENCODING=UTF-8\u0026#34;, delete_layer = TRUE,driver = \u0026#34;ESRI Shapefile\u0026#34;) }** 3. 结果 数据分享 https://pan.baidu.com/s/1yhLJodusCwx9GTK858Uxuw 提取码：1111\n欢迎关注个人公众号GeoSuper ","permalink":"https://geosuper.top/posts/%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E4%B8%AD%E5%9B%BD%E6%9C%80%E6%96%B0%E7%9A%84%E5%8E%BF%E7%BA%A7%E8%A1%8C%E6%94%BF%E5%8C%BA%E5%88%92%E7%9F%A2%E9%87%8F%E6%95%B0%E6%8D%AE/","summary":"数据来源：高德开放平台 1. 目标： （1）获取中国最新的县级行政区划矢量数据 （2）学习如何使用R语言将.json数据转为shp文件 2. 步骤： 将json数据处理为shapefile library(pacman) p_load(sf,tmap,maptools,rgdal) china\u0026lt;-st_read(\u0026#34;https://geo.datav.aliyun.com/areas_v2/bound/100000_full.json\u0026#34;) class(china) # [1] \u0026#34;sp\u0026#34; china qtm() qtm(china, fill = \u0026#34;name\u0026#34;)+ tm_text(\u0026#34;name\u0026#34;) crs(china) # CRS arguments: +proj=longlat +datum=WGS84 +no_defs  china$name # [1] \u0026#34;北京市\u0026#34; \u0026#34;天津市\u0026#34; \u0026#34;河北省\u0026#34; \u0026#34;山西省\u0026#34; \u0026#34;内蒙古自治区\u0026#34;  # [6] \u0026#34;辽宁省\u0026#34; \u0026#34;吉林省\u0026#34; \u0026#34;黑龙江省\u0026#34; \u0026#34;上海市\u0026#34; \u0026#34;江苏省\u0026#34;  # [11] \u0026#34;浙江省\u0026#34; \u0026#34;安徽省\u0026#34; \u0026#34;福建省\u0026#34; \u0026#34;江西省\u0026#34; \u0026#34;山东省\u0026#34;  # [16] \u0026#34;河南省\u0026#34; \u0026#34;湖北省\u0026#34; \u0026#34;湖南省\u0026#34; \u0026#34;广东省\u0026#34; \u0026#34;广西壮族自治区\u0026#34;  # [21] \u0026#34;海南省\u0026#34; \u0026#34;重庆市\u0026#34; \u0026#34;四川省\u0026#34; \u0026#34;贵州省\u0026#34; \u0026#34;云南省\u0026#34;  # [26] \u0026#34;西藏自治区\u0026#34; \u0026#34;陕西省\u0026#34; \u0026#34;甘肃省\u0026#34; \u0026#34;青海省\u0026#34; \u0026#34;宁夏回族自治区\u0026#34;  # [31] \u0026#34;新疆维吾尔自治区\u0026#34; \u0026#34;台湾省\u0026#34; \u0026#34;香港特别行政区\u0026#34; \u0026#34;澳门特别行政区\u0026#34; \u0026#34;\u0026#34; 导出为shapefile","title":"如何获取中国最新的县级行政区划矢量数据"},{"content":"title: \u0026ldquo;20220222\u0026rdquo; author: 浮游 date: 2021-2-22\n关于利用听书软件听书这件事 最近在上下班途中，临睡觉的时候都会选择去听书，但是听完几天后发现，一本书被听的零零散散，现在回想起来甚至记不起多少当时认为有意思的情节，有用的话等。比如睡觉前，我会设置20分钟的定时，多数时候不到20分钟就会睡着了，那后面的内容其实是没有听到的，下次再听的时候，就回就从上次结尾的地方继续听起。那在上下班的途中，因为路上车辆比较多，环境比较嘈杂，所以音量会开的相对大一些，对耳膜也不说很好。所以下次睡觉之前还是选择看书吧，途中还是听听音乐或者不听任何电子类的东西吧。听书这件事于我来说至适合听听戏曲还差不多。\n","permalink":"https://geosuper.top/posts/%E5%85%B3%E4%BA%8E%E5%90%AC%E4%B9%A6%E8%BF%99%E4%BB%B6%E4%BA%8B/","summary":"title: \u0026ldquo;20220222\u0026rdquo; author: 浮游 date: 2021-2-22\n关于利用听书软件听书这件事 最近在上下班途中，临睡觉的时候都会选择去听书，但是听完几天后发现，一本书被听的零零散散，现在回想起来甚至记不起多少当时认为有意思的情节，有用的话等。比如睡觉前，我会设置20分钟的定时，多数时候不到20分钟就会睡着了，那后面的内容其实是没有听到的，下次再听的时候，就回就从上次结尾的地方继续听起。那在上下班的途中，因为路上车辆比较多，环境比较嘈杂，所以音量会开的相对大一些，对耳膜也不说很好。所以下次睡觉之前还是选择看书吧，途中还是听听音乐或者不听任何电子类的东西吧。听书这件事于我来说至适合听听戏曲还差不多。","title":""},{"content":"","permalink":"https://geosuper.top/tags/","summary":"","title":"标签"}]